plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
}

group = 'com.iroff'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Spring-Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// Spring Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// Spring WebFlux
	implementation 'org.springframework.boot:spring-boot-starter-webflux:3.3.1'
	// Spring Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.3.3'
	// Swagger-page
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	//email
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(Checkstyle).configureEach {
	reports {
		xml.required = true
		html.required = true
	}
}

checkstyle {
	maxWarnings = 50
	ignoreFailures = true
	configFile = file("checkstyle/naver-checkstyle-rules.xml")
	configProperties = ["suppressionFile": "checkstyle/naver-checkstyle-suppressions.xml"]
}

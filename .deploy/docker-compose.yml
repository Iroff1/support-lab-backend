version: '3.8'

services:
  spring:
    build:
      context: ..
      dockerfile: .deploy/Dockerfile
    container_name: spring-app
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - ../.env.prod
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ../build/libs:/app/build/libs
    depends_on:
      - db
      - redis
    networks:
      - app-network

  nginx:
    image: nginx:stable
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
    environment:
      - TZ=Asia/Seoul
    depends_on:
      - spring
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      - TZ=Asia/Seoul
      - MYSQL_DATABASE=iroff
    env_file:
      - ../.env.prod
    volumes:
      - mysql_data:/var/lib/mysql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --default-time-zone=Asia/Seoul
    networks:
      - app-network

  redis:
    image: redis:7.0
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - TZ=Asia/Seoul
    networks:
      - app-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge